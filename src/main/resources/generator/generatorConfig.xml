<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

  <!-- 数据库配置文件 -->
  <properties resource="mybatis-generate.properties" />
  
  <!-- 在MBG工作的时候，需要额外加载的依赖包，location属性指明加载jar/zip包的全路径 -->
  <classPathEntry location="${generate.connection.location}" />
  
  <context id="Mysql" targetRuntime="MyBatis3" defaultModelType="flat">
  
	<!-- 自动识别数据库关键字，默认false。如果设置为true，根据SqlReservedWords中定义的关键字列表； 一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
	<property name="autoDelimitKeywords" value="false" />
	<!-- 生成的Java文件的编码 -->
	<property name="javaFileEncoding" value="UTF-8" />
	<!-- 格式化java代码 -->
	<property name="javaFormatter"
		value="org.mybatis.generator.api.dom.DefaultJavaFormatter" />
	<!-- 格式化XML代码 -->
	<property name="xmlFormatter"
		value="org.mybatis.generator.api.dom.DefaultXmlFormatter" />
	
	<!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
	<property name="beginningDelimiter" value="`" />
	<property name="endingDelimiter" value="`" />
	
	<!-- 注释 -->
	<commentGenerator>
		<!-- 是否去除自动生成的注释： true：是 ， false:否 -->
		<property name="suppressAllComments" value="true"></property>
		<property name="suppressDate" value="true"></property>
		<property name="javaFileEncoding" value="utf-8" />
		<property name="javaFormatter"
			value="org.mybatis.generator.api.dom.DefaultJavaFormatter"></property>
		<property name="xmlFormatter"
			value="org.mybatis.generator.api.dom.DefaultXmlFormatter"></property>
	</commentGenerator>
	
	<!-- 数据库连接 -->
	<jdbcConnection driverClass="${mysql.driverName}" connectionURL="${mysql.url}" userId="${mysql.username}" password="${mysql.password}" />
	
	<!-- java类型处理器 用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl； 注意一点，默认会先尝试使用Integer、Long、Short等来对应DECIMAL和 NUMERIC数据类型 -->
	<javaTypeResolver type="org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl">
		<!-- true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型， false：默认。 scale>0;length>18：使用BigDecimal； scale=0;length[10,18]：使用Long； scale=0;length[5,9]：使用Integer； scale=0;length<5：使用Short -->
		<property name="forceBigDecimals" value="false" />
	</javaTypeResolver>
	
	<javaModelGenerator targetPackage="${modelPackage}" targetProject="position/src/main/java">
		<property name="enableSubPackages" value="false"></property>
		<property name="trimStrings" value="true"></property>
		<property name="constructorBased" value="false"></property>
		<property name="immutable" value="false" />
	</javaModelGenerator>
	
	<sqlMapGenerator targetPackage="${sqlMapperPackage}" targetProject="position/src/main/java">
		<!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
		<property name="enableSubPackages" value="true" />
	</sqlMapGenerator>
	
	<javaClientGenerator targetPackage="${mapperPackage}" type="XMLMAPPER" targetProject="position/src/main/java">
		<!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false -->
		<property name="enableSubPackages" value="true" />
	</javaClientGenerator>
	
	<!-- 要生成全部的表，可以按此配置：<table tableName="%" /> -->
	<table tableName="keypoint" enableCountByExample="false" enableUpdateByExample="false" enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
		<property name="constructorBased" value="false" />
		<property name="ignoreQualifiersAtRuntime" value="false" />
		<property name="immutable" value="false" />
		<property name="modelOnly" value="false" />
		<property name="useActualColumnNames" value="false" />
	</table>
			
  </context>
</generatorConfiguration>